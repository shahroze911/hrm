@model IEnumerable<Cities_States.Models.Employee>

@{
    ViewBag.Title = "Index";
}
@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger" role="alert">
        @ViewBag.ErrorMessage
    </div>
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.2/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.8.0/jquery.contextMenu.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.8.0/jquery.contextMenu.min.js"></script>

    <style>
        body {
            padding-top: 20px;
        }

        .table-responsive {
            margin-top: 20px;
            overflow-x: auto;
        }

        .btn-sm i {
            margin-right: 5px;
        }

        .pagination {
            justify-content: center;
        }

        #employeeTable th, #employeeTable td {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        #employeeTable {
            table-layout: auto;
            width: 100% !important; /* Set table width to 100% of the container */
        }
        /* Custom styles for form elements */
        .form-group {
            margin-bottom: 20px; /* Add space between form groups */
        }

        .form-control {
            border: 1px solid #ced4da; /* Add a border to form controls */
            border-radius: 5px; /* Add rounded corners */
        }

        .custom-select {
            appearance: none; /* Remove default appearance */
            -webkit-appearance: none;
            -moz-appearance: none;
            padding: 8px 30px 8px 10px; /* Adjust padding for select elements */
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23000' class='bi bi-chevron-down' viewBox='0 0 16 16'%3E%3Cpath d='M2.646 5.646a.5.5 0 0 1 .708 0L8 10.293l4.646-4.647a.5.5 0 1 1 .708.708l-5 5a.5.5 0 0 1-.708 0l-5-5a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E"); /* Add a custom down arrow icon */
            background-repeat: no-repeat;
            background-position: right 10px center;
            background-size: 16px;
            cursor: pointer; /* Change cursor on hover */
        }

            .custom-select:focus {
                border-color: #80bdff; /* Change border color on focus */
                outline: 0; /* Remove default focus outline */
                box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Add focus shadow */
            }

        #searchInput {
            width: 150px; /* Adjust the width as needed */
            margin-left: auto; /* Push the search input to the right */
        }

        .table-responsive {
            overflow-x: auto;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <h2>Employee List</h2>

        <div class="container">
            <div class="row mb-3">
                <div class="col-auto">
                    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-primary" })
                </div>
                <div class="col">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search...">
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">
                <div class="col-12 d-flex p-0">
                    <button id="generateAppointmentOrder" class="btn btn-success">Generate Appointment Order</button>

                    <div class="btn-group">
                        <button type="button" class="btn btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Nomination Forms
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" href="#" id="generateNominationForms">Generate PWNRF1 Forms</a>
                            <a class="dropdown-item" href="#" id="generateNominationForms1">Generate EPF 2 Form</a>
                            <a class="dropdown-item" href="#" id="generateNominationForms2">Generate CEPGAF Form</a>
                            <a class="dropdown-item" href="#" id="generateNominationForms3">Generate PF 11 Form</a>
                            <a class="dropdown-item" href="#" id="generateNominationForms4">Generate ESCI2 Form</a>
                        </div>
                    </div>

                    <button id="exportToExcel" class="btn btn-info">Export to Excel</button>
                </div>
            </div>
        </div>
        <p></p>
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.DropDownList("ClientID", ViewBag.Clients as SelectList, "All Clients", new { @class = "form-control custom-select", id = "clientDropdown" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.DropDownList("BranchCode", ViewBag.BranchCodes as SelectList, "All Branches", new { @class = "form-control custom-select", id = "branchDropdown" })
                    </div>
                </div>
            </div>
        </div>



        <div class="table-responsive">
            <table id="employeeTable" class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th><input type="checkbox" id="selectAll" /></th>
                        <th>@Html.DisplayNameFor(model => model.FullName)</th>
                        <th>@Html.DisplayNameFor(model => model.Designation)</th>
                        <th>@Html.DisplayNameFor(model => model.MobileNumber)</th>
                        <th>@Html.DisplayNameFor(model => model.Email)</th>
                        <th>@Html.DisplayNameFor(model => model.Client.ClientID)</th> <!-- Assuming client name -->
                        <th>@Html.DisplayNameFor(model => model.BranchCode)</th> <!-- Assuming branch code -->
                        <th>@Html.DisplayNameFor(model => model.Photograph)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="employeeTableBody">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td><input type="checkbox" class="selectItem" value="@item.EmployeeID" /></td>
                            <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                            <td>@Html.DisplayFor(modelItem => item.Designation)</td>
                            <td>@Html.DisplayFor(modelItem => item.MobileNumber)</td>
                            <td>@Html.DisplayFor(modelItem => item.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.Client.ClientID)</td> <!-- Assuming client name -->
                            <td>@Html.DisplayFor(modelItem => item.BranchCode)</td> <!-- Assuming branch code -->

                            <td>
                                @if (!string.IsNullOrEmpty(item.Photograph))
                                {
                                    <img src="@Url.Content(item.Photograph)" alt="Employee Image" style="width: 100px; height: auto;" />
                                }
                                else
                                {
                                    <span>No Image Available</span>
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("Edit", new { id = item.EmployeeID })" class="btn btn-primary btn-sm" data-toggle="tooltip" title="Edit">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a href="@Url.Action("Details", new { id = item.EmployeeID })" class="btn btn-info btn-sm" data-toggle="tooltip" title="Details">
                                    <i class="fas fa-info-circle"></i> Details
                                </a>
                                <a href="@Url.Action("Delete", new { id = item.EmployeeID })" class="btn btn-danger btn-sm" data-toggle="tooltip" title="Delete">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                                @*<button class="btn btn-secondary btn-sm makeInactiveBtn" data-toggle="modal" data-target="#inactiveModal" data-employee-id="@item.EmployeeID" data-toggle="tooltip" title="Make Inactive">
                                    <i class="fas fa-user-slash"></i> Inactive
                                </button>*@

                            </td>
                        </tr>
                    }
                </tbody>
            </table>


        </div>

        @*<div class="modal fade" id="inactiveModal" tabindex="-1" aria-labelledby="inactiveModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="inactiveModalLabel">Make Employee Inactive</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group row">
                            <label class="control-label col-md-2" for="inactiveStatus">Inactive Status</label>
                            <div class="col-md-10">
                                <input type="checkbox" id="inactiveStatus" name="InactiveStatus">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="control-label col-md-2" for="dateOfExit">Date of Exit</label>
                            <div class="col-md-10">
                                <input type="date" class="form-control" id="dateOfExit" name="DateOfExit" />
                                <span id="dateOfExitError" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="saveInactive">Save</button>
                    </div>
                </div>
            </div>
        </div>*@


        <nav aria-label="Page navigation">
            <ul class="pagination" id="pagination">
                <!-- Pagination buttons will be generated here by JavaScript -->
            </ul>
        </nav>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>
   
    <script>
       $(document).ready(function () {
    // Bind click event to the save button
    $('#saveInactive').click(function () {
        console.log('Save button clicked'); // Log to console for debugging

        // Retrieve employee ID, inactive status, and date of exit
        var EmployeeID = $('#inactiveModal').data('employee-id');
        var InactiveStatus = $('#inactiveStatus').prop('checked');
        var DateOfExit = $('#dateOfExit').val();

        console.log('Employee ID:', EmployeeID); // Log to console for debugging
        console.log('Inactive Status:', InactiveStatus); // Log to console for debugging
        console.log('Date of Exit:', DateOfExit); // Log to console for debugging

        // Perform AJAX request to save data
        $.ajax({
            url: '@Url.Action("SaveDateOfExit", "Employees")',
            type: 'POST',
            data: { EmployeeID: EmployeeID, InactiveStatus: InactiveStatus, DateOfExit: DateOfExit },
            success: function (response) {
                // Handle success response
                console.log('Date of exit saved successfully');
                // Close the modal after successful save
                $('#inactiveModal').modal('hide');
            },
            error: function (xhr, status, error) {
                // Handle error response
                console.error('Error saving date of exit:', error);
            }
        });
    });
});


    </script>
    <script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();

        var rowsPerPage = 5;
        var rows = $('#employeeTableBody tr');
        var rowsCount = rows.length;
        var pageCount = Math.ceil(rowsCount / rowsPerPage);
        var numbers = $('#pagination');

        for (var i = 0; i < pageCount; i++) {
            numbers.append('<li class="page-item"><a class="page-link" href="#">' + (i + 1) + '</a></li>');
        }

        $('#employeeTableBody tr').hide();
        $('#employeeTableBody tr').slice(0, rowsPerPage).show();
        numbers.find('li:first-child a').addClass('active');

        numbers.find('li a').click(function (e) {
            e.preventDefault();
            numbers.find('li a').removeClass('active');
            $(this).addClass('active');
            var page = $(this).text();
            var start = (page - 1) * rowsPerPage;
            var end = start + rowsPerPage;
            $('#employeeTableBody tr').hide().slice(start, end).show();
        });

        $('#searchInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('#employeeTableBody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

        // Select All functionality
        $('#selectAll').click(function() {
            $('.selectItem').prop('checked', this.checked);
        });

        $('.selectItem').change(function() {
            if ($('.selectItem:checked').length == $('.selectItem').length) {
                $('#selectAll').prop('checked', true);
            } else {
                $('#selectAll').prop('checked', false);
            }
        });

$('#generateAppointmentOrder').click(function() {
    var selectedIds = getSelectedEmployeeIds();
    if (selectedIds.length > 0) {
        var url = '@Url.Action("GenerateAppointmentOrder", "Employees")';
        // Create the form element
        var form = $('<form>', {
            "id": "generateForm",
            "method": "post",
            "action": url
        });
        // Add the anti-forgery token field
        form.append('@Html.AntiForgeryToken()');
        // Add the selected employee IDs as a hidden input field
        form.append('<input type="hidden" name="selectedIds" value="' + selectedIds.join(',') + '" />');
        // Append the form to the document body and submit it
        form.appendTo(document.body).submit();
    } else {
        alert("Please select at least one employee.");
    }
});


        $('#generateNominationForms').click(function() {
    var selectedIds = getSelectedEmployeeIds();
    if (selectedIds.length > 0) {
        var url = '@Url.Action("GenerateNominationOrder", "Employees")';
        var form = $('<form>', {
            "id": "generateForm",
            "method": "post",
            "action": url
        });
        form.append('@Html.AntiForgeryToken()');
        form.append('<input type="hidden" name="selectedIds" value="' + selectedIds.join(',') + '" />');
        form.appendTo(document.body).submit();
    } else {
        alert("Please select at least one employee.");
    }
        });

        $('#generateNominationForms1').click(function() {
    var selectedIds = getSelectedEmployeeIds();
    if (selectedIds.length > 0) {
        var url = '@Url.Action("GenerateNominationOrder1", "Employees")';
        var form = $('<form>', {
            "id": "generateForm",
            "method": "post",
            "action": url
        });
        form.append('@Html.AntiForgeryToken()');
        form.append('<input type="hidden" name="selectedIds" value="' + selectedIds.join(',') + '" />');
        form.appendTo(document.body).submit();
    } else {
        alert("Please select at least one employee.");
    }
        });
        $('#generateNominationForms2').click(function() {
    var selectedIds = getSelectedEmployeeIds();
    if (selectedIds.length > 0) {
        var url = '@Url.Action("GenerateNominationOrder2", "Employees")';
        var form = $('<form>', {
            "id": "generateForm",
            "method": "post",
            "action": url
        });
        form.append('@Html.AntiForgeryToken()');
        form.append('<input type="hidden" name="selectedIds" value="' + selectedIds.join(',') + '" />');
        form.appendTo(document.body).submit();
    } else {
        alert("Please select at least one employee.");
    }
        });

        $('#generateNominationForms3').click(function() {
    var selectedIds = getSelectedEmployeeIds();
    if (selectedIds.length > 0) {
        var url = '@Url.Action("GenerateNominationOrder3", "Employees")';
        var form = $('<form>', {
            "id": "generateForm",
            "method": "post",
            "action": url
        });
        form.append('@Html.AntiForgeryToken()');
        form.append('<input type="hidden" name="selectedIds" value="' + selectedIds.join(',') + '" />');
        form.appendTo(document.body).submit();
    } else {
        alert("Please select at least one employee.");
    }
        });

         $('#generateNominationForms4').click(function() {
    var selectedIds = getSelectedEmployeeIds();
    if (selectedIds.length > 0) {
        var url = '@Url.Action("GenerateNominationOrder4", "Employees")';
        var form = $('<form>', {
            "id": "generateForm",
            "method": "post",
            "action": url
        });
        form.append('@Html.AntiForgeryToken()');
        form.append('<input type="hidden" name="selectedIds" value="' + selectedIds.join(',') + '" />');
        form.appendTo(document.body).submit();
    } else {
        alert("Please select at least one employee.");
    }
        });


        $('#exportToExcel').click(function() {
            var selectedIds = getSelectedEmployeeIds();
            if (selectedIds.length > 0) {
                var url = '@Url.Action("ExportToExcel", "Employees")';
                $('<form>', {
                    "id": "exportForm",
                    "html": '<input type="hidden" name="selectedIds" value="' + selectedIds.join(',') + '" />',
                    "method": "post",
                    "action": url
                }).appendTo(document.body).submit();
            } else {
                alert("Please select at least one employee.");
            }
        });
    });
        function getSelectedEmployeeIds() {
            var selectedIds = [];
            $('#employeeTableBody input[type="checkbox"]:checked').each(function () {
                selectedIds.push($(this).val());
            });
            return selectedIds;
        }
    </script>
    <script>
        $(document).ready(function () {
            // Function to filter the employee list based on selected client and branch code
            function filterEmployees() {
                var clientID = $("#clientDropdown").val();
                var branchCode = $("#branchDropdown").val();

                // Hide all table rows
                $("#employeeTableBody tr").hide();

                // Iterate through each row and show/hide based on client and branch code
                $("#employeeTableBody tr").each(function () {
                    var rowClientID = $(this).find("td:eq(5)").text(); // Assuming client name is at index 5
                    var rowBranchCode = $(this).find("td:eq(6)").text(); // Assuming branch code is at index 6

                    if ((clientID === "" || rowClientID === clientID) && (branchCode === "" || rowBranchCode === branchCode)) {
                        $(this).show();
                    }
                });
            }

            // Trigger filtering when dropdown values change
            $("#clientDropdown, #branchDropdown").change(function () {
                filterEmployees();
            });
        });
    </script>


</body>
</html>
