@model Cities_States.Models.BranchOffice

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "BranchOffices", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Edit Branch Office</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.BranchID)

                        <div class="form-group">
                            <label for="ClientID" class="form-label">Client ID</label>
                            <!-- Use ViewBag.Clients to populate the dropdown -->
                            @Html.DropDownList("ClientID", ViewBag.Clients as SelectList, "Select Client", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            <label for="BranchCode" class="form-label">Branch Code</label>
                            @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label for="State" class="control-label col-md-2">State</label>
                            <div class="col-md-10">
                                @Html.DropDownList("State", ViewBag.States as SelectList, "Select State", new { @id = "state", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="District" class="control-label col-md-2">District</label>
                            <div class="col-md-10">
                                @Html.DropDownList("District", ViewBag.Districts as SelectList, "Select District", new { @id = "district", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label for="BranchAddress" class="form-label">Branch Address</label>
                            @Html.EditorFor(model => model.BranchAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BranchAddress, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group form-check">
                            <input class="form-check-input" type="checkbox" id="isCLRA" @if (Model.IsCLRALicenseApplicable) { <text> checked</text> } />
                            <label class="form-check-label" for="isCLRA">Is CLRA license applicable for this site?</label>
                            @Html.HiddenFor(model => model.IsCLRALicenseApplicable) <!-- Add a hidden field to store the value -->
                        </div>

                        <!-- File Upload for CLRA License -->
                        <div class="form-group" id="fileUploadGroup" @if (!Model.IsCLRALicenseApplicable) { <text> style="display: none;" </text> }>
                            <label for="CLRALicenseUpload" class="form-label">Upload CLRA License</label>
                            <input type="file" id="CLRALicenseUpload" name="CLRALicenseUpload" class="form-control" />
                            <!-- Image preview -->
                            @if (!string.IsNullOrEmpty(Model.CLRALicense))
                            {
                                <img src="@Url.Content(Model.CLRALicense)" alt="Uploaded License" class="img-thumbnail" style="max-width: 200px; margin-top: 10px;" />
                            }
                        </div>



                        <div class="form-group">
                            <label for="CLRALicenseExpiry" class="form-label">License valid till</label>
                            @Html.EditorFor(model => model.CLRALicenseExpiry, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CLRALicenseExpiry, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="row justify-content-center mt-3">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('#state').change(function () {
                var stateName = $(this).val();
                $.getJSON('@Url.Action("GetDistrictsByState", "BranchOffices")', { stateName: stateName }, function (data) {
                    var items = '<option>Select District</option>';
                    $.each(data, function (i, district) {
                        items += "<option value='" + district.DistrictName + "'>" + district.DistrictName + "</option>";
                    });
                    $('#district').html(items);
                });
            });
            $('#isCLRA').change(function () {
                if ($(this).is(':checked')) {
                    $('#fileUploadGroup').show();
                } else {
                    $('#fileUploadGroup').hide();
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#CLRALicenseUpload').change(function () {
                var file = this.files[0];
                var fileSize = file.size; // in bytes
                var maxSize = 2 * 1024 * 1024; // 2MB

                var allowedTypes = ['image/jpeg', 'image/png', 'image/jpg'];

                if (allowedTypes.indexOf(file.type) === -1) {
                    alert('Only JPG, JPEG, or PNG files are allowed.');
                    $(this).val(''); // Clear the file input
                    return false;
                }

                if (fileSize > maxSize) {
                    alert('File size must be less than 2MB.');
                    $(this).val(''); // Clear the file input
                    return false;
                }
            });
        });
    </script>
}