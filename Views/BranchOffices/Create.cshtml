@model Cities_States.Models.BranchOffice

@{
    ViewBag.Title = "Create";
}

<style>
    .form-group {
        margin-bottom: 20px;
    }

    .card-header {
        background-color: #007bff;
        color: #fff;
    }

    .card-body {
        padding: 30px;
    }

    .btn-back {
        margin-top: 20px;
    }

    /* Additional styling for checkbox */
    .form-check-label {
        cursor: pointer;
    }

    /* Improved form layout */
    .form-label {
        font-weight: bold;
    }

    .form-control {
        width: 100%;
    }

    .form-check-input {
        margin-top: 5px;
    }

    .form-check-label {
        margin-left: 5px;
    }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h2 class="text-center">Create Branch Office</h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "BranchOffices", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-group">
                            <h4>Branch Office</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <!-- Client ID Dropdown -->
                            <div class="form-group">
                                <label for="ClientID" class="form-label">Client ID</label>
                                @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                            </div>

                            <!-- Branch Code Input -->
                            <div class="form-group">
                                <label for="BranchCode" class="form-label">Branch Code</label>
                                @Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                            </div>

                            <!-- State and District Dropdowns -->
                            <div class="form-group row">
                                <div class="col-md-6">
                                    <label for="State" class="form-label">State</label>
                                    @Html.DropDownList("State", ViewBag.States as SelectList, "Select State", new { @id = "state", @class = "form-control" })
                                </div>
                                <div class="col-md-6">
                                    <label for="District" class="form-label">District</label>
                                    @Html.DropDownList("District", new SelectList(Enumerable.Empty<SelectListItem>(), "Value", "Text"), "Select District", new { @id = "district", @class = "form-control" })
                                </div>
                            </div>

                            <!-- Branch Address Input -->
                            <div class="form-group">
                                <label for="BranchAddress" class="form-label">Branch Address</label>
                                @Html.EditorFor(model => model.BranchAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BranchAddress, "", new { @class = "text-danger" })
                            </div>

                            <!-- CLRA License Applicable Checkbox -->
                            <div class="form-group form-check">
                                <input class="form-check-input" type="checkbox" id="isCLRA" />
                                <label class="form-check-label" for="isCLRA">Is CLRA license applicable for this site?</label>
                                @Html.HiddenFor(model => model.IsCLRALicenseApplicable, new { id = "isCLRAHidden" }) <!-- Hidden field -->

                            </div>

                            <!-- File Upload for CLRA License -->
                            <div class="form-group" id="fileUploadGroup" style="display: none;">
                                <label for="CLRALicenseUpload" class="form-label">Upload CLRA License</label>
                                <input type="file" id="CLRALicenseUpload" name="CLRALicenseUpload" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label for="CLRALicenseExpiry" class="form-label">License valid till</label>
                                <input type="date" class="form-control" id="CLRALicenseExpiry" name="CLRALicenseExpiry" />
                                @Html.ValidationMessageFor(model => model.CLRALicenseExpiry, "", new { @class = "text-danger" })
                            </div>

                            <!-- Submit Button -->
                            <div class="form-group row">
                                <div class="col-md-6 offset-md-3">
                                    <button type="submit" class="btn btn-primary btn-block">Create</button>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Back to List Button -->
                    <div class="row justify-content-center btn-back">
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $("#state").change(function () {
                var stateId = $(this).val();
                if (stateId !== "") {
                    // Fetch districts based on the selected state using AJAX
                    $.ajax({
                        url: '@Url.Action("GetDistrictsByState", "BranchOffices")',
                        type: 'GET',
                        data: { stateId: stateId },
                        success: function (result) {
                            var districtDropdown = $("#district");
                            districtDropdown.empty();
                            districtDropdown.append('<option value="">Select District</option>');
                            $.each(result, function (index, district) {
                                districtDropdown.append($('<option></option>').val(district.DistrictID).text(district.DistrictName));
                            });
                        }
                    });
                } else {
                    // If no state is selected, clear the district dropdown
                    $("#district").empty().append('<option value="">Select District</option>');
                }
            });

            $('#isCLRA').change(function () {
                if ($(this).is(':checked')) {
                    $('#fileUploadGroup').show();
                } else {
                    $('#fileUploadGroup').hide();
                }
            });
        });
    </script>
    <script>
        $(function () {
            $('#isCLRA').change(function () {
                var isChecked = $(this).is(':checked');
                $('#isCLRAHidden').val(isChecked ? 'true' : 'false');
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#CLRALicenseUpload').change(function () {
                var file = this.files[0];
                var fileSize = file.size; // in bytes
                var maxSize = 2 * 1024 * 1024; // 2MB

                var allowedTypes = ['image/jpeg', 'image/png', 'image/jpg'];

                if (allowedTypes.indexOf(file.type) === -1) {
                    alert('Only JPG, JPEG, or PNG files are allowed.');
                    $(this).val(''); // Clear the file input
                    return false;
                }

                if (fileSize > maxSize) {
                    alert('File size must be less than 2MB.');
                    $(this).val(''); // Clear the file input
                    return false;
                }
            });
        });
    </script>
}
